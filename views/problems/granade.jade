extends ../layout

append scripts
    script(src='/js/utils.js')
    script(src='/js/ball.js')

block title
    title Ball

block header
    title Ball

block content
  .canvas-wrapper
    canvas(id='canvas1', class='canvas-top', width='600', height='480') No canvas support in your browser
    canvas(id='canvas2', class='canvas-back', width='600', height='480')

block add_scripts
    script
        window.onload = function () {
            var canvas = document.getElementById('canvas1'),
                canvas2 = document.getElementById('canvas2'),
                context = canvas.getContext('2d'),
                context2 = canvas2.getContext('2d'),
                mouse = utils.captureMouse(canvas),
                ball = new Ball(20, '#777'),
                ball1 = new Ball(14, '#777'),
                way = new Ball(1, "#aaa"),
                bounce = 0,
                gravity = 0.1,
                speed = 10,
                eangle = Math.PI/3,
                newBallLive = false;

            ball.vx = Math.cos(eangle)*speed;
            ball.vy = -Math.sin(eangle)*speed;
            ball.lineWidth = 0;
            ball1.lineWidth = 0;
            ball.color = '#6F4242';
            ball1.color = '#802A2A';

            ball.x = ball.radius;
            ball.y = canvas.height - ball.radius;

            function explosion(){
                ball.radius = 14;
                ball.vx = 0;
                ball.vy -= 1;

                ball1.x = ball.x;
                ball1.y = ball.y;
                ball1.vx = 4;
                ball1.vy = 4;
                ball.color = '#802A2A';

                newBallLive = true;
            }

            function checkBoundaries (ball) {
                var left = 0,
                    right = canvas.width,
                    top = 0,
                    bottom = canvas.height;

                ball.vy += gravity;
                ball.x += ball.vx;
                ball.y += ball.vy;
                //boundary detect and bounce
                if (ball.x + ball.radius > right) {
                    ball.x = right - ball.radius;
                    ball.vx *= bounce;
                } else if (ball.x - ball.radius < left) {
                    ball.x = left + ball.radius;
                    ball.vx *= bounce;
                }
                if (ball.y + ball.radius > bottom) {
                    ball.y = bottom - ball.radius;
                    ball.vy *= bounce;
                } else if (ball.y - ball.radius < top) {
                    ball.y = top + ball.radius;
                    ball.vy *= bounce;
                }
            }

            function traectory(ball) {
                way.x = ball.x;
                way.y = ball.y;

                way.draw(context2);
            }

            (function drawFrame () {
                window.requestAnimationFrame(drawFrame, canvas);

                //-- Fade out the lines slowly by drawing a rectangle over the entire canvas
                // context.fillStyle = 'rgba(0,0,0,0.5)';
                context.clearRect(0, 0, canvas.width, canvas.height);

                ball.draw(context);
                checkBoundaries(ball);
                traectory(ball)

                if (newBallLive) {
                    ball1.draw(context);
                    checkBoundaries(ball1);
                    traectory(ball1);
                }

                if (!newBallLive && ball.y < canvas.height/4){
                    explosion();
                };
            }());
        };

