extends ../layout

block scripts
    script(src='/js/utils.js')
    script(src='/js/ball.js')

block title
    title Granade

block header

block styles
    link(rel='stylesheet', href='/css/single.css')

block content
    .granade
        .canvas-wrapper
            canvas(id='canvas1', class='canvas-top', width='400', height='320') No canvas support in your browser
            canvas(id='canvas2', class='canvas-back', width='400', height='320')

block add_scripts
    script
        window.onload = function() {
            function start() {
                var canvas = document.getElementById('canvas1'),
                    canvas2 = document.getElementById('canvas2'),
                    context = canvas.getContext('2d'),
                    context2 = canvas2.getContext('2d'),
                    mouse = utils.captureMouse(canvas),
                    ball = new Ball(20, '#777'),
                    ball1 = new Ball(14, '#777'),
                    way = new Ball(1, "#aaa"),
                    bounce = 0,
                    gravity = 0.1,
                    speed = 7,
                    eangle = Math.PI/2.5,
                    newBallLive = false,
                    animation,
                    img = new Image();

                img.src = '/img/reload.png';

                context.clearRect(0, 0, canvas2.width, canvas2.height);
                context2.clearRect(0, 0, canvas2.width, canvas2.height);
                canvas.removeEventListener('click', start, false)

                ball.vx = Math.cos(eangle)*speed;
                ball.vy = -Math.sin(eangle)*speed;
                ball.lineWidth = 0;
                ball1.lineWidth = 0;
                ball.color = '#6F4242';
                ball1.color = '#802A2A';

                ball.x = ball.radius;
                ball.y = canvas.height - ball.radius;

                function explosion(){
                    ball1.x = ball.x;
                    ball1.y = ball.y;
                    ball1.vx = ball.vx;
                    ball1.vy = -3;

                    ball.radius = 14;
                    ball.vx = 0;
                    ball.vy += 2;
                    ball.color = '#802A2A';

                    newBallLive = true;
                    setTimeout(function() {
                        window.cancelAnimationFrame(animation);
                        started = false;
                        context.drawImage(img,canvas.width-50,0, 50, 50);
                        canvas.addEventListener('click', start, false)
                    }, 2000)
                }

                function checkBoundaries (ball) {
                    var left = 0,
                        right = canvas.width,
                        top = 0,
                        bottom = canvas.height;

                    ball.vy += gravity;
                    ball.x += ball.vx;
                    ball.y += ball.vy;
                    //boundary detect and bounce
                    if (ball.x + ball.radius > right) {
                        ball.x = right - ball.radius;
                        ball.vx *= bounce;
                    } else if (ball.x - ball.radius < left) {
                        ball.x = left + ball.radius;
                        ball.vx *= bounce;
                    }
                    if (ball.y + ball.radius > bottom) {
                        ball.y = bottom - ball.radius;
                        ball.vy *= bounce;
                    } else if (ball.y - ball.radius < top) {
                        ball.y = top + ball.radius;
                        ball.vy *= bounce;
                    }
                }

                function traectory(ball) {
                    way.x = ball.x;
                    way.y = ball.y;

                    way.draw(context2);
                }

                (function drawFrame () {
                    animation = window.requestAnimationFrame(drawFrame, canvas);

                    //-- Fade out the lines slowly by drawing a rectangle over the entire canvas
                    // context.fillStyle = 'rgba(0,0,0,0.5)';
                    context.clearRect(0, 0, canvas.width, canvas.height);

                    ball.draw(context);
                    checkBoundaries(ball);
                    traectory(ball)

                    if (newBallLive) {
                        ball1.draw(context);
                        checkBoundaries(ball1);
                        traectory(ball1);
                    }

                    if (!newBallLive && ball.vy > 0){
                        explosion();
                    };
                }());
            };
            start()
        };

